name: '[AU4] Check: Unit Tests (utest)'

on:
  pull_request:
  workflow_dispatch:
    inputs:
      code_coverage:
        description: 'Enable code coverage'
        required: false
        default: 'false'
  schedule:
    - cron: "0 3 * * 4" # Every Thursday night at 03:00 for master branch

env:
  CI_DIR: buildscripts/ci

jobs:
  run_tests:
    runs-on: ubuntu-22.04
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.12.1
      with:
        access_token: ${{ github.token }}

    - name: Clone repository
      uses: actions/checkout@v4

    - name: "Configure workflow"
      run: |
        echo "CCACHE_TIMESTAMP=$(date -u +"%F-%T")" | tee -a $GITHUB_ENV

        cmake -DEVENT=${{ github.event_name }} \
              -DBUILD_MODE="devel_build" \
              -DARTIFACT_INFO="build.artifacts/" \
              -P ${CI_DIR}/common/ci_configure.cmake

    - name: Restore ccache files
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/.ccache
        key: ${{github.workflow}}-ccache-${{ env.CCACHE_TIMESTAMP }}
        restore-keys: ${{github.workflow}}-ccache-

    - name: Setup ccache
      run: |
        sudo apt-get update && sudo apt-get install -y ccache
        cmake -P ${CI_DIR}/tools/setup_ccache_config.cmake

    - name: Free up disk space
      run: |
        sudo docker system prune -a -f
        sudo rm -rf /usr/local/lib/android

    - name: Setup environment
      run: |
        bash ./buildscripts/ci/linux/setup.sh

    - name: Build
      env:
        GITHUB_EVENT_NAME: ${{ github.event_name }}
        CODE_COVERAGE: ${{ inputs.code_coverage }}
      run: |

        ENABLE_CODE_COVERAGE='false'

        if [[ "$GITHUB_EVENT_NAME" == "schedule" || "$CODE_COVERAGE" == "true" ]]; then
          ENABLE_CODE_COVERAGE='true'
        else
          ENABLE_CODE_COVERAGE='false'
        fi

        source $HOME/build_tools/environment.sh
        cmake -DBUILD_ENABLE_CODE_COVERAGE=${ENABLE_CODE_COVERAGE} -P ${CI_DIR}/linux/ci_build_utests.cmake

        echo "============== ccache ==============="
        ccache -s

    - name: Run tests
      run: |
        cmake -P ${CI_DIR}/linux/ci_run_utests.cmake
      env:
        ASAN_OPTIONS: "detect_leaks=0"

    - name: Code coverage
      if: github.event_name == 'schedule' || inputs.code_coverage == 'true'
      run: |
        lcov --capture --directory "$(pwd)/build.debug/" --output-file coverage.info
        lcov --remove coverage.info '/usr/*' '*/tests/*' '*/thirdparty/*' '*/moc_*' '*framework/Headers/*' '*/hb-*' '*/Qt/*' --output-file filtered_coverage.info

        python3 buildscripts/ci/linux/tools/lcov_badger.py filtered_coverage.info coverage_badge.svg

        S3_URL='s3://extensions.musescore.org/test/code_coverage/au_coverage_badge.svg'

        bash ./buildscripts/ci/tools/s3_push_file.sh \
          --s3_key '${{ secrets.S3_KEY }}' \
          --s3_secret '${{ secrets.S3_SECRET }}' \
          --s3_url "${S3_URL}" \
          --file_path "coverage_badge.svg"
