name: '[AU4] Build: Windows'

on:
  pull_request:
    branches:
    - master

  schedule:
    - cron: '0 3 */1 */1 *' # At 03:00 on every day-of-month for master
  #   - cron: '0 5 */1 */1 *' # At 05:00 on every day-of-month for current release branch
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build mode: devel_build, nightly_build, testing_build, stable_build'
        required: true
        default: 'devel_build'
      sentry_project:
        description: 'Upload symbols and dumps to Sentry (choose a project): au4(default for stable build), au4-sandbox'
        required: false
        default: ''

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CI_DIR: buildscripts/ci

jobs:
  au4_build_windows:
    runs-on: windows-2022
    steps:
    - name: Clone repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 3
        submodules: recursive

    - name: "Configure workflow"
      shell: bash
      env:
        pull_request_title: ${{ github.event.pull_request.title }}
        SENTRY_SERVER_AU4_KEY: ${{ secrets.SENTRY_SERVER_AU4_KEY }}
        SENTRY_SERVER_AU4_SANDBOX_KEY: ${{ secrets.SENTRY_SERVER_AU4_SANDBOX_KEY }}
        SENTRY_PROJECT: ${{ github.event.inputs.sentry_project }}
      run: |
        ADD_INFO="_${GITHUB_REF#refs/heads/}"
        if [ "${{ github.event_name }}" == "schedule" ] && [ "${{ github.event.schedule }}" == "0 5 */1 */1 *" ]; then ADD_INFO="_${{ env.CURRENT_RELEASE_BRANCH }}"; fi
        if [ "${{ github.event_name }}" == "pull_request" ]; then ADD_INFO="_${{ github.event.pull_request.number }}_${pull_request_title}"; fi

        BUILD_MODE=${{ github.event.inputs.build_mode }}

        cmake -DEVENT=${{ github.event_name }} \
              -DBUILD_MODE=${BUILD_MODE} \
              -DARTIFACT_INFO="Win_${ADD_INFO}" \
              -P ${CI_DIR}/common/ci_configure.cmake

        DO_BUILD='true'
        UPLOAD_ARTIFACT_NAME=$(cat ./build.artifacts/env/artifact_name.env)

        DO_UPLOAD_SYMBOLS='false'
        SENTRY_URL=""

        if [ "$SENTRY_SERVER_AU4_KEY" != "" ]; then
          if [ -z "$SENTRY_PROJECT" ] && [ "$BUILD_MODE" == "stable_build" ]; then
            SENTRY_PROJECT="au4"
          fi

          if [ "$SENTRY_PROJECT" == "au4" ]; then
            DO_UPLOAD_SYMBOLS='true'
            SENTRY_URL=https://sentry.audacityteam.org/api/4/minidump/?sentry_key=$SENTRY_SERVER_AU4_KEY
          fi
        fi

        if [ -z "$SENTRY_PROJECT" ] && [ "$BUILD_MODE" == "nightly_build" ]; then
          SENTRY_PROJECT="au4-sandbox"
        fi

        if [ "$SENTRY_PROJECT" == "au4-sandbox" ] && [ "$SENTRY_SERVER_AU4_SANDBOX_KEY" != "" ]; then
          DO_UPLOAD_SYMBOLS='true'
          SENTRY_URL=https://sentry.audacityteam.org/api/5/minidump/?sentry_key=$SENTRY_SERVER_AU4_SANDBOX_KEY
        fi

        echo "DO_BUILD=$DO_BUILD" >> $GITHUB_ENV
        echo "DO_BUILD: $DO_BUILD"
        echo "UPLOAD_ARTIFACT_NAME=$UPLOAD_ARTIFACT_NAME" >> $GITHUB_ENV
        echo "UPLOAD_ARTIFACT_NAME: $UPLOAD_ARTIFACT_NAME"

        echo "DO_UPLOAD_SYMBOLS=$DO_UPLOAD_SYMBOLS" >> $GITHUB_ENV
        echo "DO_UPLOAD_SYMBOLS: $DO_UPLOAD_SYMBOLS"
        echo "SENTRY_PROJECT=$SENTRY_PROJECT" >> $GITHUB_ENV
        echo "SENTRY_PROJECT: $SENTRY_PROJECT"
        echo "SENTRY_URL=$SENTRY_URL" >> $GITHUB_ENV
        echo "SENTRY_URL: $SENTRY_URL"
    - name: Register msvc problem matcher
      run: echo "::add-matcher::.github/problem_matchers/msvc.json"

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.9.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2022_64'
        modules: 'qt5compat qtnetworkauth qtshadertools qtwebsockets qtgraphs qtquick3d'

    - name: Setup environment
      if: env.DO_BUILD == 'true'
      shell: bash
      run: |
        cmake -P ${CI_DIR}/windows/setup.cmake

    - name: Build
      if: env.DO_BUILD == 'true'
      shell: bash
      run: |
        C_URL=${SENTRY_URL}; if [ -z "$C_URL" ]; then C_URL="''"; fi
        source /c/build_tools/environment.sh
        cmake -DCRASH_REPORT_URL=$C_URL -P ${CI_DIR}/windows/ci_build.cmake

    - name: Package
      env:
        SIGN_KEY:    ${{ secrets.WINDOWS_CODE_SIGNING_ACCESS_KEY_ID }}
        SIGN_SECRET: ${{ secrets.WINDOWS_CODE_SIGNING_SECRET_ACCESS_KEY }}
        WIN_MSI_TESTING_AU4_GUID: ${{ secrets.WIN_MSI_TESTING_AU4_GUID }}
        WIN_MSI_STABLE_AU4_GUID: ${{ secrets.WIN_MSI_STABLE_AU4_GUID }}
      if: env.DO_BUILD == 'true'
      shell: bash
      run: |
        cmake -P ${CI_DIR}/windows/package.cmake

    - name: Generate and upload dump symbols
      if: env.DO_UPLOAD_SYMBOLS == 'true'
      shell: bash
      run: |
        APP_BIN=$(pwd)/build.release/Audacity4.pdb

        cmake -DAPP_BIN=${APP_BIN} \
              -DSENTRY_URL=https://sentry.audacityteam.org \
              -DSENTRY_ORG=sentry \
              -DSENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} \
              -DSENTRY_PROJECT=${SENTRY_PROJECT} \
              -P ${CI_DIR}/crashdumps/ci_generate_and_upload.cmake

    - name: Upload artifacts on GitHub
      if: env.DO_BUILD == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.UPLOAD_ARTIFACT_NAME }}
        path: ./build.artifacts/


